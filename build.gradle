
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
    }
}

plugins {
    id 'java'
    id 'idea' 
    id 'org.hidetake.ssh' version '2.10.1'

}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'app.saikat'
version '1.0.0'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += ["build/generated//sources/annotationProcessor/java/main"]
        }
    }
}


dependencies {
    implementation project(':Annotations')
    annotationProcessor project(':AnnotationProcessors') 

    implementation project(':ConfigurationManagement')
    implementation project(':UrlManagement')

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.4.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.1.4.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.4.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.1.4.RELEASE'

    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.5'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta4'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.8.0-beta4'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.4.RELEASE'

}

String homeFolder = System.getProperty('user.home')

remotes {
    localNetwork {
        host = '192.168.100.2'
        user = 'pi'
        identity = file("${homeFolder}/.ssh/id_rsa_openssh")
        fileTransfer = "scp"
    }
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.localNetwork) {
                String serverDir = '/home/pi/Servers/javaDeploy'

                put from: "$buildDir/libs/${bootJar.archiveName}", into: '/home/pi/Servers/javaDeploy'
                put from: "$projectDir/start_server.sh", into: "$serverDir"
                
                execute("chmod +x $serverDir/start_server.sh")
                execute("$serverDir/start_server.sh") { result ->
                    print result
                }
            }
        }
    }
}